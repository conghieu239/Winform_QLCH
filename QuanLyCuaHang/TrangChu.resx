<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTrangChu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnDBELHBLzW5+VAAADyUlEQVRIS9WXS2gTQRjHB1pbEREf
        9OBJUGhCsUmzu2lMhb4stmazfUlr66mCCvWggif1UMHHRQStgigePCiKIqinniqiWC9eRK1WQS2oCF5U
        fNVH/X2b3bCuMaZrLg78mN3ZmfnP983MN7PKMDpUJNKn6upa1eCg4j1dqmmp2bpuBqHcMMxSXVdK00zV
        2FivlBqCHElEx8YGVCzWWaZp7SFdT3fTaJBOtgRA2q3V9VRI09LldXUtqqVlpaPkS8lkqy2KYC88gu//
        yA8YR7ivqqq3NBrtdJR86fhxhbAllorodBG5DbXgKPkSbmFOxD32aHN1EJQv9LsBHCVfkoWUmdOiC0/j
        7q3gKPkSI5LVyMLICn/j/Q75ETich2G4AtT/XdRhGzhKvpRD+DPsMwyLb+m8YE0judT3C7rMSFgsEIvF
        olyWusj3q1A0i4vJ/yMsrt5L+RDs8cK8HuTbC0/dfMxI+D3v+8jnks/3g3AF3y7DV6e+INFqCmRAN2EU
        nsBGcJR8ic78wtLJAzgBR+GYF4RPk78GV/QtnINOdkKYfKlDJSwyjDWqtrYJHdkJKUeVlEPYFSfy2FvF
        j5S7dSagHxA0N5FfJL8Pj+EGMC1mnPJyXV9tn1iaZuUVLoQJjsBmjtFmnq/DB/C6X/qTQb6i/12IVqRS
        S9Brt4/ioMLi3n4RxfVi9d/aTlFvP9YurKkR13cFEsbF5nmQ+RRLC233EdaxDmbpOu4OICyj78J1Mqfi
        3lx1hDfwErLup81oLGYujsdZ6QGEX8Ri7XLDuMCzd04ldLIV5dl8Rr6DOtvJn2bK7NPqIxiRSDBh2aey
        Xe55ykT0Jp0ScNKX6G9zImHiUvucl/3s1hMNdoE1K4iwBAcRZstky2T1nkokUmXxuLkA5tBnE9zy1BFE
        Y4ABlgURvgvLgH36S5vn9LOxunq1iK6CMc83F+pbbbreURJE+B0kGPUhcjeYuEyygM6QS6z3lnu+W5UN
        DU2Brj4SsXbTpp6c4JCzzp8gklnz7OglF3gKuqFQYWEcYnhqJ7nf6j/BrdOKLl/elQmb8vfgXORncr1l
        FZtn8VYYlx8ACQ656rncxsBVyWR7iVypbGH5dclc6C250D8EsbwQZK5PcievQrgfrvH+yfNdmAQ5v6Mr
        VlglkYipQqE1mUNCfmFGRvptcQJDJR3ILwyLrSDk3qxhAQM3FxtGipPIXA8DiLViJZ605lVXdzOlli3a
        09OTEXZ/2pLJNjU8rFRNjTXDn7aU/P7QrkPV1zfTnx04pKwkHG5j12Rca7s3m5T6CW0IaImfS+S8AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>